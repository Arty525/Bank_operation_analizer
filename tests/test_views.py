import pytest
import src.views as views
import datetime
import requests
from unittest.mock import patch, Mock
import src.utils as utils
from src.views import main_page


@pytest.mark.parametrize(
    "value, expected",
    [
        (
            [
                {"Номер карты": "*1234", "Сумма операции": "-500", "Кэшбэк": 70},
                {"Номер карты": "*5533", "Сумма операции": "500"},
                {"Номер карты": "*1234", "Сумма операции": "-100", "Кэшбэк": 20},
                {"Номер карты": "*5533", "Сумма операции": "720", "Кэшбэк": 10},
                {"Номер карты": "*6251", "Сумма операции": "-700", "Кэшбэк": 150},
                {"Номер карты": "*1234", "Сумма операции": " 200", "Кэшбэк": 70},
                {"Номер карты": "*6251", "Сумма операции": "-1000"},
                {"Номер карты": "*1234", "Сумма операции": "-30", "Кэшбэк": 70},
            ],
            [
                {"last_digits": "1234", "total_spent": 630.0, "cashback": 2},
                {"last_digits": "5533", "total_spent": 0.0, "cashback": 0},
                {"last_digits": "6251", "total_spent": 1700.0, "cashback": 1},
            ]
        )
    ],
)


def test_cards_collector(value: list, expected: list) -> None:
    assert views.cards_collector(value) == expected


@pytest.mark.parametrize(
    "value, expected",
    [
        (
            [
                {"Дата операции": "01.02.2020 15:02:12", "Сумма платежа": "-500", "Категория": "Переводы", "Описание": "Дмитрий Ш."},
                {"Дата операции": "01.01.2019 15:02:12", "Сумма платежа": "500", "Категория": "Переводы", "Описание": "Василий П."},
                {"Дата операции": "21.12.2024 15:02:12", "Сумма платежа": "-1500", "Категория": "Супермаркеты", "Описание": "Пятерочка"},
                {"Дата операции": "21.12.2020 15:02:12", "Сумма платежа": "-500", "Категория": "Фастфуд", "Описание": "Вкусно и точка"},
                {"Дата операции": "21.12.2024 15:02:12", "Сумма платежа": "-500", "Категория": "Развлечения", "Описание": "Steam"},
                {"Дата операции": "10.03.2022 15:02:12", "Сумма платежа": "-2500", "Категория": "Заправки", "Описание": "Роснефть №152"},
                {"Дата операции": "24.02.2022 15:02:12", "Сумма платежа": "-500", "Категория": "Переводы", "Описание": "Ирина Л."},
                {"Дата операции": "25.02.2024 15:02:12", "Сумма платежа": "600", "Категория": "Переводы", "Описание": "Петр Р."},
            ],
            [
                    {"Дата операции": "25.02.2024 15:02:12", "Сумма платежа": "600", "Категория": "Переводы", "Описание": "Петр Р."},
                    {"Дата операции": "01.01.2019 15:02:12", "Сумма платежа": "500", "Категория": "Переводы", "Описание": "Василий П."},
                    {"Дата операции": "21.12.2024 15:02:12", "Сумма платежа": "-500", "Категория": "Развлечения", "Описание": "Steam"},
                    {"Дата операции": "24.02.2022 15:02:12", "Сумма платежа": "-500", "Категория": "Переводы", "Описание": "Ирина Л."},
                    {"Дата операции": "21.12.2020 15:02:12", "Сумма платежа": "-500", "Категория": "Фастфуд", "Описание": "Вкусно и точка"}
            ]
        )
    ],
)

def test_top_transactions(value: list, expected: list) -> None:
    assert views.top_transactions(value) == expected


def test_main_page():
    date = datetime.datetime.strptime("28.12.2021 00:00:00", "%d.%m.%Y %H:%M:%S")
    utils.get_currency_rates = Mock(return_value={"EUR": 0.009785, "USD": 0.010139})
    utils.get_stock_prices = Mock(return_value={
        'pagination':
            {'limit': 100, 'offset': 0, 'count': 5, 'total': 5},
        'data':
            [
                {'open': 247.97, 'high': 247.97, 'low': 233.45, 'last': 233.88, 'close': 237.59, 'volume': 1516752.0,
                 'date': '2025-01-31T20:00:00+0000', 'symbol': 'AAPL', 'exchange': 'IEXG'},
                {'open': 236.89, 'high': 240.285, 'low': 236.31, 'last': 237.82, 'close': 234.64, 'volume': 817875.0,
                 'date': '2025-01-31T20:00:00+0000', 'symbol': 'AMZN', 'exchange': 'IEXG'},
                {'open': 201.69, 'high': 205.475, 'low': 201.61, 'last': 204.0, 'close': 200.87, 'volume': 924014.0,
                 'date': '2025-01-31T20:00:00+0000', 'symbol': 'GOOGL', 'exchange': 'IEXG'},
                {'open': 419.29, 'high': 420.65, 'low': 415.06, 'last': 416.25, 'close': 414.99, 'volume': 693167.0,
                 'date': '2025-01-31T20:00:00+0000', 'symbol': 'MSFT', 'exchange': 'IEXG'},
                {'open': 399.99, 'high': 419.98, 'low': 397.74, 'last': 404.83, 'close': 400.28, 'volume': 726160.0,
                 'date': '2025-01-31T20:00:00+0000', 'symbol': 'TSLA', 'exchange': 'IEXG'}
            ]
    })
    assert main_page(date) == {
  "greeting": "Добрый день",
  "cards": [
    {
      "last_digits": "5814",
      "total_spent": 1262.00,
      "cashback": 12.62
    },
    {
      "last_digits": "7512",
      "total_spent": 7.94,
      "cashback": 0.08
    }
  ],
  "top_transactions": [
    {
      "date": "21.12.2021",
      "amount": 1198.23,
      "category": "Переводы",
      "description": "Перевод Кредитная карта. ТП 10.2 RUR"
    },
    {
      "date": "20.12.2021",
      "amount": 829.00,
      "category": "Супермаркеты",
      "description": "Лента"
    },
    {
      "date": "20.12.2021",
      "amount": 421.00,
      "category": "Различные товары",
      "description": "Ozon.ru"
    },
    {
      "date": "16.12.2021",
      "amount": -14216.42,
      "category": "ЖКХ",
      "description": "ЖКУ Квартира"
    },
    {
      "date": "16.12.2021",
      "amount": 453.00,
      "category": "Бонусы",
      "description": "Кешбэк за обычные покупки"
    }
  ],
  "currency_rates": [
    {
      "currency": "USD",
      "rate": 73.21
    },
    {
      "currency": "EUR",
      "rate": 87.08
    }
  ],
  "stock_prices": [
    {
      "stock": "AAPL",
      "price": 150.12
    },
    {
      "stock": "AMZN",
      "price": 3173.18
    },
    {
      "stock": "GOOGL",
      "price": 2742.39
    },
    {
      "stock": "MSFT",
      "price": 296.71
    },
    {
      "stock": "TSLA",
      "price": 1007.08
    }
  ]
}
